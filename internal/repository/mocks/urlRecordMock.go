// Code generated by MockGen. DO NOT EDIT.
// Source: /home/saimon/Documents/Estudos/shortify/internal/repository/urlRecord.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/ribeirosaimon/shortify/internal/entity"
)

// MockUrlRecordRepository is a mock of UrlRecordRepository interface.
type MockUrlRecordRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUrlRecordRepositoryMockRecorder
}

// MockUrlRecordRepositoryMockRecorder is the mock recorder for MockUrlRecordRepository.
type MockUrlRecordRepositoryMockRecorder struct {
	mock *MockUrlRecordRepository
}

// NewMockUrlRecordRepository creates a new mock instance.
func NewMockUrlRecordRepository(ctrl *gomock.Controller) *MockUrlRecordRepository {
	mock := &MockUrlRecordRepository{ctrl: ctrl}
	mock.recorder = &MockUrlRecordRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlRecordRepository) EXPECT() *MockUrlRecordRepositoryMockRecorder {
	return m.recorder
}

// GetUrlRecord mocks base method.
func (m *MockUrlRecordRepository) GetUrlRecord(ctx context.Context, id string) (*entity.UrlRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlRecord", ctx, id)
	ret0, _ := ret[0].(*entity.UrlRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlRecord indicates an expected call of GetUrlRecord.
func (mr *MockUrlRecordRepositoryMockRecorder) GetUrlRecord(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlRecord", reflect.TypeOf((*MockUrlRecordRepository)(nil).GetUrlRecord), ctx, id)
}

// InsertUrlRecord mocks base method.
func (m *MockUrlRecordRepository) InsertUrlRecord(ctx context.Context, urlRecord *entity.UrlRecord) (*entity.UrlRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertUrlRecord", ctx, urlRecord)
	ret0, _ := ret[0].(*entity.UrlRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertUrlRecord indicates an expected call of InsertUrlRecord.
func (mr *MockUrlRecordRepositoryMockRecorder) InsertUrlRecord(ctx, urlRecord interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertUrlRecord", reflect.TypeOf((*MockUrlRecordRepository)(nil).InsertUrlRecord), ctx, urlRecord)
}
